@model InsideOutSellingSolutions.DTOs.AccountDTO.LoginDTO

@{
	ViewData["Title"] = "Login";
}

@* <h1>Login</h1>

<h4>LoginDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="LoginId" class="control-label"></label>
                <input asp-for="LoginId" class="form-control" />
                <span asp-validation-for="LoginId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
 *@

@{
	Layout = null;
}

<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Login</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

	<style>
		body {
			background: linear-gradient(90deg, #74ebd5, #9face6);
			height: 100vh;
			display: flex;
			justify-content: center;
			align-items: center;
			font-family: Arial, sans-serif;
			color: #333;
		}

		.card {
			border-radius: 15px;
			box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
		}

			.card h4 {
				color: #4a4a4a;
				margin-bottom: 20px;
				font-weight: bold;
			}

		.btn-primary {
			background: linear-gradient(45deg, #6a11cb, #2575fc);
			border: none;
		}

			.btn-primary:hover {
				background: linear-gradient(45deg, #2575fc, #6a11cb);
			}

		.form-control {
			border-radius: 10px;
			border: 1px solid #ddd;
			padding: 10px 15px;
		}

			.form-control:focus {
				box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
				border-color: #80bdff;
			}

		.text-center {
			padding: 10px;
			font-family: 'Times New Roman', Times, serif;
			font-size: 35px;
			font-weight: bold;
		}

		.login-links {
			text-align: center;
			margin-top: 15px;
		}

			.login-links a {
				color: #2575fc;
				text-decoration: none;
				font-weight: bold;
			}

				.login-links a:hover {
					text-decoration: underline;
				}
	</style>
</head>
<body>
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-lg-6 col-md-8">
				@using (Html.BeginForm("Login", "Account", FormMethod.Post))
				{
					@Html.AntiForgeryToken()
					<div class="card p-5 bg-white">
						@*<img class="image" src="http://13.202.222.111/Finance/wwwroot/scientificscholarlogoLoginpage.PNG" alt="Logo" style="border: 2px solid; border-radius: 10px; padding: 5px;" />*@                        
							<img class="image mx-auto d-block mb-4" src="~/img/iosslogo.png" alt="Logo" style="height: 320px; width: 500px;" />
						<h4 class="text-center">Login Here</h4>

						@Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

						<div class="mb-4">
							@Html.TextBoxFor(model => model.LoginId, new { @class = "form-control", @id = "LoginId", @placeholder = "Enter your email or username" })
							@Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
						</div>

						<div class="mb-4 position-relative">
							@Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "password", @placeholder = "Enter your password" })
							<span class="position-absolute top-50 end-0 translate-middle-y me-3" style="cursor: pointer;" onclick="togglePasswordVisibility()">
								<i id="toggleIcon" class="bi bi-eye-slash"></i>
							</span>
							@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
						</div>

						@if (ViewBag.Message != null)
						{
							<div class="alert alert-danger">
								@ViewBag.Message
							</div>
						}

						<div class="d-grid">
							<button type="submit" class="btn btn-primary btn-block">Login</button>
						</div>

						<div class="login-links">
							<a href="@Url.Action("ForgotPassword", "Account")">Forgot Password?</a>
						</div>
					</div>
				}
			</div>
		</div>
	</div>

	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.10/dist/jquery.validate.unobtrusive.min.js"></script>

	<script>
		function togglePasswordVisibility() {
			const passwordInput = document.getElementById('password');
			const toggleIcon = document.getElementById('toggleIcon');
			if (passwordInput.type === 'password') {
				passwordInput.type = 'text';
				toggleIcon.classList.remove('bi-eye-slash');
				toggleIcon.classList.add('bi-eye');
			} else {
				passwordInput.type = 'password';
				toggleIcon.classList.remove('bi-eye');
				toggleIcon.classList.add('bi-eye-slash');
			}
		}

				document.querySelector('form').addEventListener('submit', function(event) {
			var loginId = document.getElementById('LoginId').value;
			var password = document.getElementById('Password').value;

			if (!loginId && !password) {
				event.preventDefault(); // Prevent form submission
				alert("Please enter both username and password.");
			}
		});
			var message = "@ViewBag.Message";
		if (message) {
			console.log("Login Message:", message);
		}
	</script>
</body>
</html>
